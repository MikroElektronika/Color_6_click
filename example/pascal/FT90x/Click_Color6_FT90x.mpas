{*
Example for Color6 Click

    Date          : maj 2018.
    Author        : Katarina Perendic

Test configuration FT90x :
    
    MCU                : FT900
    Dev. Board         : EasyFT90x v7 
    FT90x Compiler ver : v2.2.1.0

---

Description :

The application is composed of three sections :

- System Initialization - Initializes I2C module
- Application Initialization - Initializes driver init and configuration chip for measurement
- Application Task - (code snippet) - Reads values from the X / Y / Z channel and
                                      converts to Ee (input light irradiance regarding to the photodiode’s area
                                      within the conversion time interval) data.
                                      This data logs on USB UART every 2 seconds.

*}
program Click_Color6_FT90x;

uses Click_Color6_types, Click_Color6_config;

var
    dataText : array[50] of char; 
    X_data : uint16_t; 
    Y_data : uint16_t; 
    Z_data : uint16_t; 
    Ee_data : real; 
    temperature : real; 
    
procedure systemInit(); 
begin

    mikrobus_i2cInit(_MIKROBUS1, @_COLOR6_I2C_CFG[0]); 
    mikrobus_logInit(_LOG_USBUART, 9600); 
    mikrobus_logWrite(' --- System Init --- ', _LOG_LINE); 
    Delay_ms(100); 

end;

procedure applicationInit(); 
begin

    color6_i2cDriverInit(T_COLOR6_P(@_MIKROBUS1_GPIO), T_COLOR6_P(@_MIKROBUS1_I2C), 0x74); 
    color6_softwareReser(); 
    color6_writeByte(_COLOR6_REG_CONFIGURATION_REGISTER_1, (_COLOR6_CREG1_GAIN_XYZ_2 or _COLOR6_CREG1_TIME_512ms)); 
    color6_writeByte(_COLOR6_REG_CONFIGURATION_REGISTER_2, (((0x80 or _COLOR6_CREG2_EN_TM_ENABLE) or _COLOR6_CREG2_DIGITAL_DIVIDER_ENABLE) or _COLOR6_CREG2_DIVIDER_16)); 
    color6_writeByte(_COLOR6_REG_CONFIGURATION_REGISTER_3, _COLOR6_CREG3_SB_STANDBY_SWITCHED_ON); 
    color6_writeByte(_COLOR6_REG_BREAK_TIME, 0x52); 
    color6_writeByte(_COLOR6_REG_EDGE_COUNT_VALUE, 0x01); 
    color6_goToMeasurementMode(); 

end;

procedure applicationTask(); 
begin

    mikrobus_logWrite(' Channel X :  ', _LOG_TEXT); 
    X_data := color6_readData(_COLOR6_MREG_MEASUREMENT_X_CHANNEL); 
    IntToStr(X_data, dataText); 
    mikrobus_logWrite(dataText, _LOG_LINE); 
    mikrobus_logWrite(' Ee X channel data:   ', _LOG_TEXT); 
    Ee_data := color6_convertingToEe(_COLOR6_MREG_MEASUREMENT_X_CHANNEL, X_data); 
    FloatToStr(Ee_data, dataText); 
    mikrobus_logWrite(dataText, _LOG_LINE); 
    mikrobus_logWrite(' Channel Y :  ', _LOG_TEXT); 
    Y_data := color6_readData(_COLOR6_MREG_MEASUREMENT_Y_CHANNEL); 
    IntToStr(Y_data, dataText); 
    mikrobus_logWrite(dataText, _LOG_LINE); 
    mikrobus_logWrite(' Ee Y channel data:   ', _LOG_TEXT); 
    Ee_data := color6_convertingToEe(_COLOR6_MREG_MEASUREMENT_Y_CHANNEL, Y_data); 
    FloatToStr(Ee_data, dataText); 
    mikrobus_logWrite(dataText, _LOG_LINE); 
    mikrobus_logWrite(' Channel Z :  ', _LOG_TEXT); 
    Z_data := color6_readData(_COLOR6_MREG_MEASUREMENT_Z_CHANNEL); 
    IntToStr(Z_data, dataText); 
    mikrobus_logWrite(dataText, _LOG_LINE); 
    mikrobus_logWrite(' Ee Z channel data:   ', _LOG_TEXT); 
    Ee_data := color6_convertingToEe(_COLOR6_MREG_MEASUREMENT_Z_CHANNEL, Z_data); 
    FloatToStr(Ee_data, dataText); 
    mikrobus_logWrite(dataText, _LOG_LINE); 
    mikrobus_logWrite(' Temperature :  ', _LOG_TEXT); 
    temperature := color6_getTemperature(); 
    FloatToStr(temperature, dataText); 
    mikrobus_logWrite(dataText, _LOG_LINE); 
    mikrobus_logWrite(' ', _LOG_LINE); 
    Delay_ms(2000); 

end;

begin
    dataText[0] := 0;
    X_data := 0;
    Y_data := 0;
    Z_data := 0;

    systemInit(); 
    applicationInit(); 
    while (1) do 
    begin 
        applicationTask(); 
    end;

end.